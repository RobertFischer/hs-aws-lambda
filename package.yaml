name:                aws-lambda-runtime-api
version:             0.1.0.0
github:              "RobertFischer/aws-lambda-runtime-api"
license:             Unlicense
author:              "Robert Fischer"
maintainer:          "smokejumperit@gmail.com"
copyright:           "(c)2020 Robert Fischer. All Rights Reserved. See UNLICENSE for liscensing terms."

extra-source-files:
- README.md

# Metadata used when publishing your package
synopsis:            A modern and easy-to-use wrapper for Docker-based Lambda implementations
category:            AWS

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/RobertFischer/aws-lambda-runtime-api#readme>

# These options are global, so don't put optimization or runtime options here.
ghc-options:
- -Wall
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -fprint-expanded-synonyms
- -fprint-explicit-coercions
- -fprint-equality-relations
- -fprint-typechecker-elaboration
- -freverse-errors
- -funclutter-valid-hole-fits
- -fhelpful-errors
- -fshow-warning-groups
- -fPIC
- -fno-warn-tabs
- -fno-warn-type-defaults
- -Werror=compat
- -Werror=partial-fields
- -Werror=missing-fields
- -Werror=incomplete-patterns
- -Werror=overlapping-patterns
- -Werror=redundant-constraints

default-extensions:
- BangPatterns
- BinaryLiterals
- CPP
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveDataTypeable
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveLift
- DeriveTraversable
- DoAndIfThenElse
- EmptyDataDecls
- ExistentialQuantification
- ExtendedDefaultRules
- FlexibleContexts
- FlexibleInstances
- ForeignFunctionInterface
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- InstanceSigs
- KindSignatures
- LambdaCase
- MagicHash
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- OverloadedLists
- OverloadedStrings
- PackageImports
- PartialTypeSignatures
- PatternGuards
- PolyKinds
- QuasiQuotes
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- StaticPointers
- TemplateHaskell
- TupleSections
- TypeFamilies
- TypeOperators
- TypeSynonymInstances
- UnboxedTuples
- UnliftedFFITypes
- ViewPatterns
- TypeFamilyDependencies

dependencies:
- base >= 4.7 && < 5

library:
  source-dirs: src
  dependencies:
  - aeson
  - containers
  - http-conduit
  - lens
  - text
  - text-conversions
  - unliftio
  - safe-exceptions
  - deepseq

  # This is where the optimization flags should go
  ghc-options:
  - -O2
  - -feager-blackholing
  - -fexcess-precision
  - -flate-dmd-anal
  - -fmax-inline-alloc-size=1024
  - -fmax-simplifier-iterations=16
  - -fsimplifier-phases=8
  - -fspec-constr-keen
  - -fspec-constr-count=12
  - -fspecialise-aggressively
  - -flate-specialise
  - -fstatic-argument-transformation

tests:
  aws-lambda-runtime-api-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - aws-lambda-runtime-api
